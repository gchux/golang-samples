admin:
  access_log_path: /dev/stdout
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: subst.PORT }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: HTTP1
                stream_idle_timeout: 30s
                route_config:
                  name: local_route
                  request_headers_to_remove:
                    - authorization
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: greeter_service
                            host_rewrite_literal: subst.GRPC_AUDIENCE
                            timeout: 30s
                            max_stream_duration:
                              grpc_timeout_header_max: 30s
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,x-client-id,x-serverless-authorization,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,authorization
                        max_age: "1728000"
                        expose_headers: x-client-id,grpc-status,grpc-message,authorization,x-serverless-authorization
                http_filters:
                  - name: "envoy.filters.http.gcp_authn"
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig
                      http_uri:
                        uri: "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"
                        cluster: "gcp_authn"
                        timeout: 10s
                      token_header:
                        name: x-serverless-authorization
                        value_prefix: "Bearer "
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
  clusters:
    - name: greeter_service
      connect_timeout: 30s
      type: STATIC
      # type: STRICT_DNS
      # dns_lookup_family: V4_ONLY
      # HTTP/2 support
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options:
              connection_keepalive:
                interval: 300s
                timeout: 5s
                connection_idle_interval: 60s
      # lb_policy: ROUND_ROBIN
      # win/mac hosts: Use address: host.docker.internal instead of address: localhost in the line below
      load_assignment:
        cluster_name: cluster_0
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: subst.GRPC_HOST
                      port_value: subst.GRPC_PORT
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            validation_context:
              trusted_ca:
                filename: /grpc_server.crt
              match_typed_subject_alt_names:
                - san_type: IP_ADDRESS
                  matcher:
                    exact: subst.GRPC_HOST_IP
      metadata:
        typed_filter_metadata:
          envoy.filters.http.gcp_authn:
            "@type": type.googleapis.com/envoy.extensions.filters.http.gcp_authn.v3.Audience
            url: subst.GRPC_AUDIENCE
    - name: gcp_authn
      type: STATIC
      # type: STRICT_DNS
      # dns_lookup_family: V4_ONLY
      connect_timeout: 5s
      load_assignment:
        cluster_name: "gcp_authn"
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 169.254.169.254
                      port_value: 80

layered_runtime:
  layers:
    - name: "static"
      static_layer:
        envoy.reloadable_features.gcp_authn_use_fixed_url: false
